//Turing test for fish
// (c) Maksym Romenskyy. September 2014

//Declaration of variables
int currentScreen;
int screen = 0;
PFont f;                         // Font variable
PImage img;                      // Backgroung image
PImage img1;
int circle1X, circle1Y;          // Position of the left circle
int circle2X, circle2Y;          // Position of the right circle
int circlesSize = 300;           // Diameter of circles
int nextW = 640/2-25;            // Width of the "Next" button
int nextH = 360-20*2;            // Hight of the "Next" button
int nextX = 50;                  // "Next" button: X
int nextY = 20;                  // "Next" button: Y
int realCircle = 760;            // Circle size in simulations and in experiment
int sf = realCircle/circlesSize; // Convertion
int pointSize = 5;               // Particle size
int np = 10;                     // Number of particles
int ntrial = 5;                  // Number of play rounds
int movielength =300;
int cframe = 0;
int ii = 0;
boolean writelog = true;
color circle1Color, circle2Color, baseColor;
color circle1Highlight;
color circle2Highlight;
color currentColor;
color circle1stroke;
color circle2stroke;
boolean circle1Over = false;
boolean circle2Over = false;
boolean shownext = false;
boolean rectOver = false;
boolean leftE = false;
boolean rightE = false;
boolean showstat = false;
boolean showstat1=false;
boolean clickRight = false;
boolean clickLeft = false;
boolean skipmovie=false;
boolean logstat = true;
int numFrames = 0;  // The number of frames in the animation
int currentFrame = 0;
PImage[] images = new PImage[numFrames];

// Setup and initialization
int trial = 0;
int i = 0;
int prfra = 1;
int correct = 0;
int jj = 1;

void setup() {
  size(640, 360);
  noStroke();
  smooth();
  textSize(28);
  text("Loading...", width/2-textWidth("Loading...")/2, height/2);
  f=createFont("Arial", 16);
  
  frameRate(15);
  
  expArray = new int [][] {
  
};

randomSeed( hour() + second() + millis() );
  float r = random(1);
//  if (r < 0.5){
//  name2=name3;
//}
//  else{
//  name2=name2;
//  }

  float rchunk = random(9900);
    i=int(rchunk);
  circle1Color = color(0);
  circle1Highlight = color(204);
  circle2Color = color(255);
  circle2Highlight = color(204);
  baseColor = color(252);
  currentColor = baseColor;
  circle2X = width/2+circlesSize/2+10;
  circle2Y = height/2;
  circle1X = width/2-155;
  circle1Y = height/2;
  ellipseMode(CENTER);
  circle1stroke = color(55);
  circle2stroke =color(55);
  //img = loadImage("http://maksymromensky.com/fishgame/background.jpeg");
  //img1 = loadImage("http://maksymromensky.com/fishgame/fish_small.png");
  
  for (int j = 0; j < movielength+1; j++) {
    jj=jj+2;
   //String imageName = "imag" + nf(jj, 4) + ".jpeg";
  //images[j] = loadImage("http://maksymromensky.com/fishgame/"+imageName);
  }
  
  r = random(1);
  if (r < 0.5){
  leftE=true;
  rightE=false;
}
  else{
   rightE=true;
   leftE=false;
  } 
}

 
void draw() {
  switch(currentScreen) {
  case 0: drawScreenZero(); break;
  case 1: drawScreenOne(); break;
  case 2: drawScreenTwo(); break;
  case 3: drawScreenThree(); break;
  case 4: drawScreenFour(); break;
  default: background(0); break;
  }
}

void mousePressed() {
  int scr=currentScreen;
  if(currentScreen==1){
  if(skipmovie){
  currentScreen++;  
  }
  }
  else{
  currentScreen++;
  } 
  if (showstat1) { 
  if (currentScreen > 4) { currentScreen = 0; 
circle1Over = false;
circle2Over = false;
shownext = false;
rectOver = false;
leftE = false;
rightE = false;
showstat = false;
showstat1=false;
clickRight = false;
clickLeft = false;
trial = 0;
i = 0;
prfra = 1;
correct = 0;
jj = 1;
r = random(1);
  if (r < 0.5){
  leftE=true;
  rightE=false;
}
  else{
   rightE=true;
   leftE=false;
  } 
}
  }
  else{
  if (currentScreen > 3) { currentScreen = scr; }
  }
  
  if (showstat) { 
    showstat1=true;
  }
    
    if (circle2Over) {
    circle2stroke = color(204, 102, 0);
    circle1stroke = color(55);
    shownext = true;
    clickRight = true;
    clickLeft = false;
  }
  if (circle1Over) {
    circle1stroke = color(204, 102, 0);
    circle2stroke = color(55);
    shownext = true;
    clickLeft = true;
    clickRight = false;
  }
  if (rectOver) {
//Re-initialization
cframe=0;
if(clickLeft && leftE){
correct=correct+1;
}
if(clickRight && rightE){
correct=correct+1;
}
clickLeft = false;
clickRight = false;
  trial = trial + 1;
  if(trial==ntrial){
    showstat=true;
}
  shownext=false;
  circle1stroke = color(55);
  circle2stroke = color(55);
    float r = random(1);
  if (r < 0.5){
  leftE=true;
  rightE=false;
}
  else{
   rightE=true;
   leftE=false;
  } 
    rchunk = random(9900);
    i=int(rchunk);
    logstat = true;
  }
}
 
void drawScreenZero() {
  //background(img);
  textSize(7);
  fill(255);
  text("Photo courtesy of Benson Kua", width-100, height-10);
    noFill();
    stroke(0);
    strokeWeight(5);
    rect(width/2-100, height/2-30, 200, 60);
    fill(0);
    textFont(f, 50);
    text("Play", width/2-textWidth("Play")/2, height/2+15);
  }

void drawScreenOne() {
  background(255);
  image(images[currentFrame], width/2-480/2, 50);
  currentFrame=currentFrame+1;
  if (currentFrame > movielength-150) {
    skipmovie=true;
  stroke(0);
    fill(255);
    strokeWeight(0.9);
    rect(width-textWidth("Skip")-25, height-40, nextX, nextY);
    fill(0);
    textFont(f, 20);
    text("Skip", width-textWidth("Skip")-20, height-22.5);
  }
  if (currentFrame >movielength) {
    currentFrame = 0;
    currentScreen++;
  }
  }
  
  void drawScreenTwo() {
  background(255);
  textSize(16);
  text("On the next screen you will be shown two videos.", width/2-textWidth("On the next screen you will be shown two videos.")/2, height/2.7);
    text("One of these is the positions of real fish swimming in a tank, ", width/2-textWidth("One of these is the positions of real fish swimming in a tank, ")/2, height/2.7+20);
    text("the other is a computer simulation. Select the video showing the real fish.", width/2-textWidth("the other is a computer simulation. Select the video showing the real fish.")/2, height/2.7+40);
    noFill();
    stroke(0);
    strokeWeight(5);
    rect(width/2-100, height/2+65, 200, 60);
    fill(0);
    textFont(f, 50);
    text("Begin", width/2-textWidth("Begin")/2, height/2+110);
  }
 
void drawScreenThree() {
  strokeWeight(1);
  update(mouseX, mouseY);
  background(currentColor);
  
  if (circle1Over) {
    fill(circle1Highlight);
  } else {
    fill(circle2Color);
  }
  stroke(circle1stroke);
  ellipse(circle1X, circle1Y, circlesSize, circlesSize);
  
  if (circle2Over) {
    fill(circle2Highlight);
  } else {
    fill(circle2Color);
  }
  stroke(circle2stroke);
  ellipse(circle2X, circle2Y, circlesSize, circlesSize);
  stroke(54, 202, 10);
  fill(54, 202, 10);

// Display particle positions  
cframe=cframe+1;
if (cframe<100) {
if (frameCount /= prfra ) {
  for(int j = 0; j < np; ++j){ 
    i=i+1;
    V1 = new PVector(expArray[i][0],expArray[i][1]); // Experimental data
    V2 = new PVector(simArray[i][0],simArray[i][1]); // Simulation data
    
    if(leftE){
    float xLeft = (V1.x+380)/sf+16;          // Plot experimental data on the left
    float yLeft = (V1.y+380)/sf+30;
    float xRight = (V2.x+380)/sf+328;
    float yRight = (V2.y+380)/sf+30;
    }
    else {
    float xRight = (V2.x+380)/sf+15;
    float yRight = (V2.y+380)/sf+30;
    float xLeft = (V1.x+380)/sf+329;        // Plot experimental data on the right
    float yLeft = (V1.y+380)/sf+30;
    }
    ellipse(xLeft, yLeft, pointSize, pointSize);
    ellipse(xRight, yRight, pointSize, pointSize);
    if (i == 9999 ) {
      i=0;
    }
  }
  }
  
}
if (cframe>=100) {
  textFont(f, 20);
  text("Make your choice", width/2-textWidth("Make your choice")/2, height/2);
   ii=i; 
  for(int j = 0; j < np; ++j){ 
    ii=ii+1;
    V1 = new PVector(expArray[ii][0],expArray[ii][1]); // Experimental data
    V2 = new PVector(simArray[ii][0],simArray[ii][1]); // Simulation data
  if(leftE){
    float xLeft = (V1.x+380)/sf+15;          // Plot experimental data on the left
    float yLeft = (V1.y+380)/sf+30;
    float xRight = (V2.x+380)/sf+328;
    float yRight = (V2.y+380)/sf+30;
    }
    else {
    float xRight = (V2.x+380)/sf+15;
    float yRight = (V2.y+380)/sf+30;
    float xLeft = (V1.x+380)/sf+328;        // Plot experimental data on the right
    float yLeft = (V1.y+380)/sf+30;
    }
    ellipse(xLeft, yLeft, pointSize, pointSize);
    ellipse(xRight, yRight, pointSize, pointSize);
if (ii == i ) {
      ii=i-np;
    }  
}
}
  prfra=frameCount; 
  
// "Next" button
if (shownext) {
    stroke(0);
    fill(255);
    strokeWeight(0);
    rect(nextW, nextH, nextX, nextY);
    fill(0);
    textFont(f, 20);
    text("Next", width/2-textWidth("Next")/2, height-22.5);
}
}

void drawScreenFour() {
  background(255);
  //image(img1, width/2-192/2, 150);
  textFont(f, 20);
  fill(0);
  if(correct<3){text("Try again..", width/2-textWidth("Try again..")/2, 70);}
  if(correct>2){
  if(correct<5){
  text("Pretty good.", width/2-textWidth("Pretty good.")/2, 70);}
}
  if(correct>4){text("Congratulations!", width/2-textWidth("Congratulations!")/2, 70);}
  text("You have answered", width-550, 100);
  int inwidth = width-550+textWidth("You have answered");
  fill(54, 202, 10);
  text(correct, inwidth+6, 100);
  fill(0);
  text("out of", inwidth+22, 100);
  text(ntrial+1, inwidth+28+textWidth("out of"), 100);
  text("questions correctly.", inwidth+textWidth("out of")+42, 100);
  noFill();
    stroke(0);
    //strokeWeight(1);
    //rect(width/2-78, height/2+80, 150, 50);
    fill(0);
    //textFont(f, 30);
    //text("Play again", width/2-textWidth("Play again")/2, height/2+115);
    textFont(f, 20);
    text("Click refresh button to play again", width/2-textWidth("Click refresh button to play again")/2, height/2+115);
    if(writelog){
    String s=str(correct);
    if (correct==6){
      //link("http://collective-behavior.com/apps/fishgame/form.html");
  writelog=false;  
  }else
    {
//String new1 = loadStrings("http://"+"collective-behavior.com/apps/fishgame/log.php?value="+s);
    //putinfo();
    writelog=false;
    }  
} 
    
  }
  
//void putinfo() {
//if(logstat){
  //  String s=str(correct);
    
//String new1 = loadStrings("http://"+"collective-behavior.com/apps/fishgame/log.php?value="+s);
//logstat = false;
//println(logstat);
  //  }  
//}

// Detect mouse position
void update(int x, int y) {
  if ( overCircle2(circle2X, circle2Y, circlesSize) ) {
    circle2Over = true;
    circle1Over = false;
  } else if ( overcircle1(circle1X, circle1Y, circlesSize, circlesSize) ) {
    circle1Over = true;
    circle2Over = false;
  } else {
    circle2Over = circle1Over = false;
  }
if ( overRect(nextW, nextH, nextX, nextY) ) {
  rectOver = true;
}else{
  rectOver = false;
}
}
// Detect click on Circle 1
boolean overcircle1(int x, int y, int diameter) {
  float disX = x - mouseX;
  float disY = y - mouseY;
  if (sqrt(sq(disX) + sq(disY)) < diameter/2 ) {
    return true;
  } else {
    return false;
  }
}

// Detect click on Circle 2
boolean overCircle2(int x, int y, int diameter) {
  float disX = x - mouseX;
  float disY = y - mouseY;
  if (sqrt(sq(disX) + sq(disY)) < diameter/2 ) {
    return true;
  } else {
    return false;
  }
}

// Detect click on Button "Next"
boolean overRect(int x, int y, int width, int height)  {
  if (mouseX >= x && mouseX <= x+width && 
      mouseY >= y && mouseY <= y+height) {
    return true;
  } else {
    return false;
  }
}
